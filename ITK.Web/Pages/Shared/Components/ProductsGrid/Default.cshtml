@using System.Globalization
@model ITK.UseCases.Utilities.PaginatedList<Product>
@{
    if(Model != null){
        <div class="products__grid grid">
            @foreach (var item in Model)
            {
                <div class="products__grid-gridItem-wrap">
                        <div class="products__grid-gridItem-header">
                            <div class="gridItem__header-button">
                                <a href="#" class="gridItem__header-link">
                                    <div class="gridItem__header-link-wrap button__icon">
                                        £ @String.Format(CultureInfo.InvariantCulture,"{0:0.00}", @item.Price)
                                        <i class="bx bx-right-arrow-alt"></i>
                                    </div>                    
                                </a>
                            </div>
                        </div>
        
                        <div class="products__grid-gridItem-img-wrap">
                            <img class="product__grid-product-img" src="~/img/products/@item.Image" />
                        </div>
                        <div class="products_grid-gridItem-details">
                            <div class="gridItem__details-name">
                                @StringExtensions.ShortenAndFormatText(item.Title, 50).ToString()
                            </div>
                        </div>
                    </div>
            }
        </div>

        <ul class="pagination">
            @{
                // Current page should never go below 1
                if(Model.CurrentPage > 1)
                {
                    var currentPage = (Model.CurrentPage);
                    <li class="page-item">
                        <a class="page-item active" asp-page="./Index" asp-route-pageIndex="@currentPage--">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </li>
                }
            }

            @for (int i = Model.CurrentPage - 3; i < Model.CurrentPage + 3; i++)
            {
                if(i > 0 && i <= Model.TotalPages)
                {
                    //  set active page
                    if(i == Model.CurrentPage)
                    {
                        <a class="page-item active" asp-page="./Index" asp-route-pageIndex="@i">@i</a>
                    }
                    else
                    {
                        <a class="page-item" asp-page="./Index" asp-route-pageIndex="@i">@i</a>
                    }
                }
            }
            @if(Model.CurrentPage < Model.TotalPages)
            {
                // so long as current page <= total pages
                var nextage = Model.CurrentPage;
                nextage++;
                <li class="page-item">
                    <a class="page-item" asp-page="./Index" asp-route-pageIndex="@nextage">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <div class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </div>
                </li>
            }
        </ul>

        <div class="products__grid-more-wrap">
            <p>MORE</p>
        </div>
    }
    else
    {
        <h1>Loading</h1>
    }
}
